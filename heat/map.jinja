{%- set default_params = {
    'cacert_file': salt['grains.filter_by']({
        'Debian': '/etc/ssl/certs/ca-certificates.crt',
        'RedHat': '/etc/pki/tls/certs/ca-bundle.crt'
    })}
%}

{% set server = salt['grains.filter_by']({
    'BaseDefaults': default_params,
    'Debian': {
        'pkgs': ['heat-api', 'heat-api-cfn', 'heat-engine', 'heat-common','python-heatclient', 'gettext-base'],
        'services': ['heat-api', 'heat-api-cfn', 'heat-engine'],
        'notification': False,
        'cors': {},
        'clients': {},
        'message_queue': {
          'rpc_response_timeout': 600
        },
        'enable_proxy_headers_parsing': true,
        'logging': {
          'app_name': 'heat',
          'log_appender': false,
          'log_file': '/var/log/heat/heat.log',
          'log_handlers': {
            'watchedfile': {
              'enabled': true
            }
          },
        },
    },
    'RedHat': {
        'pkgs': ['openstack-heat-api', 'openstack-heat-api-cfn', 'openstack-heat-api-cloudwatch', 'openstack-heat-engine', 'openstack-heat-common'],
        'services': ['openstack-heat-api', 'openstack-heat-api-cfn', 'openstack-heat-api-cloudwatch', 'openstack-heat-engine'],
        'notification': False,
        'cors': {},
        'clients': {},
        'message_queue': {
          'rpc_response_timeout': 600
        },
        'enable_proxy_headers_parsing': true,
        'logging': {
          'app_name': 'heat',
          'log_appender': false,
          'log_file': '/var/log/heat/heat.log',
          'log_handlers': {
            'watchedfile': {
              'enabled': true
            }
          },
        },
    },
}, merge=pillar.heat.get('server', {}), base='BaseDefaults') %}

{%- if server.version in ["juno", "kilo", "liberty", "mitaka", "newton", "ocata", "pike"] %}
  {%- do server.pkgs.append('heat-api-cloudwatch') %}
  {%- do server.services.append('heat-api-cloudwatch') %}
{%- endif %}

{% set client = salt['grains.filter_by']({
    'Debian': {
        'pkgs': ['python-heatclient'],
    },
    'RedHat': {
        'pkgs': ['python-heatclient'],
    },
}, merge=pillar.heat.get('client', {})) %}

{% set monitoring = salt['grains.filter_by']({
    'default': {
        'error_log_rate': 0.2,
        'endpoint_failed_major_threshold': 0.5,
    },
}, grain='os_family', merge=salt['pillar.get']('heat:monitoring')) %}

{% set upgrade = pillar.get('heat', {}).get('upgrade', {}) %}
